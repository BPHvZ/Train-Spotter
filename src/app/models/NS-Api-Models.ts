/**
 * This file was auto-generated by swagger-to-ts.
 * Do not make direct changes to the file.
 */

export interface NSApiModels {
  VerstoringReisadvies: {
    titel?: string;
    advies?: string[];
    translatableTexts?: string[];
  };
  JourneyDetailLink: {
    type?: 'BTM' | 'TRAIN_XML' | 'TRAIN_JSON';
    link?: {
      title?: string;
      uriBuilder?: { [key: string]: any };
      rel?: string;
      rels?: string[];
      uri?: string;
      params?: { [key: string]: string };
      type?: string;
    };
  };
  Message: {
    externalId?: string;
    head?: string;
    text?: string;
    lead?: string;
    type?: 'MAINTENANCE' | 'DISRUPTION';
    startDate?: string;
    endDate?: string;
    startTime?: string;
    endTime?: string;
  };
  BaanvakBeperking: {
    van?: NSApiModels['StationCode'];
    tot?: NSApiModels['StationCode'];
    via?: NSApiModels['StationCode'][];
    richting?: 'HEEN' | 'HEEN_EN_TERUG';
  };
  Stop: {
    name?: string;
    lng?: number;
    lat?: number;
    city?: string;
    countryCode?: string;
    uicCode?: string;
    weight?: number;
    products?: number;
    routeIdx?: number;
    plannedDepartureDateTime?: string;
    plannedDepartureTimeZoneOffset?: number;
    actualDepartureDateTime?: string;
    actualDepartureTimeZoneOffset?: number;
    plannedDepartureTrack?: string;
    actualDepartureTrack?: string;
    plannedArrivalDateTime?: string;
    plannedArrivalTimeZoneOffset?: number;
    actualArrivalDateTime?: string;
    actualArrivalTimeZoneOffset?: number;
    plannedArrivalTrack?: string;
    actualArrivalTrack?: string;
    departureDelayInSeconds?: number;
    arrivalDelayInSeconds?: number;
    cancelled?: boolean;
    passing?: boolean;
    quayCode?: string;
  };
  Melding: {
    id?: string;
    titel?: string;
    type?: 'prio_1' | 'prio_2' | 'prio_3';
    url?: string;
    bodyItems?: NSApiModels['BodyItem'][];
  };
  DepartureArrivalMessage: { message?: string; style?: 'INFO' | 'WARNING' };
  Product: {
    number?: string;
    categoryCode?: string;
    shortCategoryName?: string;
    longCategoryName?: string;
    operatorCode?: string;
    operatorName?: string;
    type?:
      | 'TRAIN'
      | 'BUS'
      | 'TRAM'
      | 'METRO'
      | 'FERRY'
      | 'WALK'
      | 'BIKE'
      | 'CAR'
      | 'TAXI'
      | 'SUBWAY'
      | 'UNKNOWN';
    displayName?: string;
  };
  StationCode: { code?: string; empty?: boolean };
  PrijsTraject: {
    idVerkoopcombinatie?: number;
    bedrag?: number;
    opstaptarief?: number;
  };
  Step: {
    distanceInMeters?: number;
    durationInSeconds?: number;
    startLocation?: NSApiModels['Location'];
    endLocation?: NSApiModels['Location'];
    instructions?: string;
  };
  TravelAdvice: {
    trips?: NSApiModels['Trip'][];
    scrollRequestBackwardContext?: string;
    scrollRequestForwardContext?: string;
    message?: string;
    firstDeparture?: string;
    firstArrival?: string;
    firstTrip?: NSApiModels['Trip'];
    lastTripDeparture?: string;
    lastTripArrival?: string;
    lastTrip?: NSApiModels['Trip'];
  };
  LocalizableStrings: {
    language?: 'DUTCH' | 'ENGLISH';
    locale?: {
      script?: string;
      country?: string;
      variant?: string;
      extensionKeys?: string[];
      unicodeLocaleAttributes?: string[];
      unicodeLocaleKeys?: string[];
      iso3Language?: string;
      iso3Country?: string;
      displayLanguage?: string;
      displayScript?: string;
      displayCountry?: string;
      displayVariant?: string;
      displayName?: string;
      language?: string;
    };
  };
  StationRepresentation: {
    self?: {
      title?: string;
      uriBuilder?: { [key: string]: any };
      rel?: string;
      rels?: string[];
      uri?: string;
      params?: { [key: string]: string };
      type?: string;
    };
    links?: { [key: string]: object };
    payload?: NSApiModels['Station'][];
    meta?: { [key: string]: object };
  };
  EticketOption: {
    productType?: string;
    priceIncents?: number;
    travelClass?: 'FIRST_CLASS' | 'SECOND_CLASS';
    travelDiscount?: 'NO_DISCOUNT' | 'DISCOUNT_20' | 'DISCOUNT_40';
  };
  Toeslag: { type?: string; bedrag?: number };
  RouteStation: { [key: string]: any };
  Departure: {
    direction?: string;
    name?: string;
    plannedDateTime?: string;
    actualDateTime?: string;
    plannedTrack?: string;
    actualTrack?: string;
    product?: NSApiModels['Product'];
    trainCategory?: string;
    cancelled?: boolean;
    journeyDetailRef?: string;
    messages?: NSApiModels['DepartureArrivalMessage'][];
    departureStatus?: 'ON_STATION' | 'INCOMING' | 'DEPARTED';
  };
  TripOriginDestination: {
    name?: string;
    lng?: number;
    lat?: number;
    city?: string;
    countryCode?: string;
    uicCode?: string;
    weight?: number;
    products?: number;
    type?: 'STATION' | 'ADDRESS' | 'POINT_OF_INTEREST';
    prognosisType?: string;
    plannedTimeZoneOffset?: number;
    plannedDateTime?: string;
    actualTimeZoneOffset?: number;
    actualDateTime?: string;
    plannedTrack?: string;
    actualTrack?: string;
    exitSide?: 'LEFT' | 'RIGHT' | 'UNKNOWN';
    checkinStatus?:
      | 'CHECKIN'
      | 'CHECKOUT'
      | 'OVERCHECK'
      | 'DETOUR'
      | 'REQUIRED_CHECK_OUT_IN'
      | 'NOTHING';
    travelAssistanceBookingInfo?: NSApiModels['ServiceBookingInfo'];
    travelAssistanceMeetingPoints?: string[];
    notes?: NSApiModels['Note'][];
    quayCode?: string;
    domestic?: boolean;
    latestKnownTrack?: string;
  };
  Verstoring: {
    type?:
      | 'MELDING_PRIO_1'
      | 'MELDING_PRIO_2'
      | 'MELDING_PRIO_3'
      | 'STORING'
      | 'WERKZAAMHEID'
      | 'EVENEMENT';
    id?: string;
    baanvakBeperking?: NSApiModels['BaanvakBeperking'][];
    reden?: string;
    extraReistijd?: string;
    leafletUrl?: string;
    reisadviezen?: NSApiModels['Reisadviezen'];
    geldigheidsLijst?: NSApiModels['Geldigheid'][];
    verwachting?: string;
    gevolg?: string;
    gevolgType?: string;
    fase?: string;
    faseLabel?: string;
    impact?: number;
    maatschappij?: number;
    alternatiefVervoer?: string;
    landelijk?: boolean;
    oorzaak?: string;
    header?: string;
    meldtijd?: string;
    periode?: string;
    baanvakken?: NSApiModels['Baanvak'][];
    trajecten?: NSApiModels['Traject'][];
    versie?: string;
    volgnummer?: string;
    prioriteit?: number;
    translatableTexts?: string[];
  };
  Namen: { lang?: string; kort?: string; middel?: string };
  LatLng: { lat?: number; lng?: number };
  Reisrecht: {
    reistype?: number;
    prijsReisrecht?: NSApiModels['PrijsReisrecht'][];
    routeaanduiding?: number;
    routeId?: string;
    traject?: NSApiModels['Traject'][];
  };
  Download: {
    titel?: string;
    url?: string;
    length?: number;
    mimeType?: string;
    lastModified?: number;
  };
  Reisadviezen: {
    titel?: string;
    translatableTexts?: string[];
    verstoringreisadvies?: NSApiModels['VerstoringReisadvies'][];
    verstoringReisAdvies?: NSApiModels['VerstoringReisadvies'][];
  };
  Trip: {
    uid?: string;
    plannedDurationInMinutes?: number;
    transfers?: number;
    status?:
      | 'CANCELLED'
      | 'CHANGE_NOT_POSSIBLE'
      | 'CHANGE_COULD_BE_POSSIBLE'
      | 'ALTERNATIVE_TRANSPORT'
      | 'DISRUPTION'
      | 'MAINTENANCE'
      | 'UNCERTAIN'
      | 'REPLACEMENT'
      | 'ADDITIONAL'
      | 'SPECIAL'
      | 'NORMAL';
    legs?: NSApiModels['Leg'][];
    overviewPolyLine?: NSApiModels['LatLng'][];
    checksum?: string;
    crowdForecast?: 'UNKNOWN' | 'LOW' | 'MEDIUM' | 'HIGH';
    punctuality?: number;
    ctxRecon?: string;
    actualDurationInMinutes?: number;
    idx?: number;
    optimal?: boolean;
    fares?: NSApiModels['TripFare'][];
    productFare?: NSApiModels['TripFare'];
    fareOptions?: NSApiModels['TripFareOptions'];
    shareUrl?: {
      title?: string;
      uriBuilder?: { [key: string]: any };
      rel?: string;
      rels?: string[];
      uri?: string;
      params?: { [key: string]: string };
      type?: string;
    };
    type?: 'NS' | 'NS_ACCESSIBLE' | 'NEGENTWEE' | 'GOOGLE' | 'PAS';
    realtime?: boolean;
    travelAssistanceInfo?: NSApiModels['TravelAssistanceInfo'];
    routeId?: string;
    firstLeg?: NSApiModels['Leg'];
    lastLeg?: NSApiModels['Leg'];
  };
  DepartureBoard: { departures?: NSApiModels['Departure'][] };
  BodyItem: {
    objectType?: string;
    content?: string;
    titel?: string;
    downloads?: NSApiModels['Download'][];
  };
  ExitsideResponse: { [key: string]: any };
  Arrival: {
    origin?: string;
    name?: string;
    plannedTrack?: string;
    actualTrack?: string;
    product?: NSApiModels['Product'];
    trainCategory?: string;
    cancelled?: boolean;
    journeyDetailRef?: string;
    plannedDateTime?: string;
    actualDateTime?: string;
    messages?: NSApiModels['DepartureArrivalMessage'][];
    routeStations?: NSApiModels['RouteStation'][];
    actualOrPlannedTime?: string;
  };
  ArrivalBoard: { arrivals?: NSApiModels['Arrival'][] };
  Leg: {
    idx?: string;
    name?: string;
    travelType?:
      | 'PUBLIC_TRANSIT'
      | 'WALK'
      | 'TRANSFER'
      | 'BIKE'
      | 'CAR'
      | 'KISS'
      | 'TAXI'
      | 'UNKNOWN';
    direction?: string;
    distance?: number;
    cancelled?: boolean;
    changePossible?: boolean;
    alternativeTransport?: boolean;
    journeyStatus?: 'PLANNED' | 'REPLACEMENT' | 'ADDITIONAL' | 'SPECIAL';
    journeyDetailRef?: string;
    origin?: NSApiModels['TripOriginDestination'];
    destination?: NSApiModels['TripOriginDestination'];
    product?: NSApiModels['Product'];
    notes?: NSApiModels['Note'][];
    messages?: NSApiModels['Message'][];
    stops?: NSApiModels['Stop'][];
    steps?: NSApiModels['Step'][];
    coordinates?: number[][];
    crowdForecast?: 'UNKNOWN' | 'LOW' | 'MEDIUM' | 'HIGH';
    punctuality?: number;
    crossPlatformTransfer?: boolean;
    shorterStock?: boolean;
    changeCouldBePossible?: boolean;
    shorterStockWarning?: string;
    shorterStockClassification?: 'BUSY' | 'EXTRA_BUSY';
    journeyDetail?: NSApiModels['JourneyDetailLink'][];
    reachable?: boolean;
    plannedDurationInMinutes?: number;
    travelAssistanceDeparture?: NSApiModels['ServiceBookingInfo'];
    travelAssistanceArrival?: NSApiModels['ServiceBookingInfo'];
    overviewPolyLine?: NSApiModels['LatLng'][];
    lastStop?: NSApiModels['Stop'];
    firstStop?: NSApiModels['Stop'];
    travelOrNeccesaryWalk?: boolean;
    publicTransit?: boolean;
    punctualityInternal?: number;
  };
  TripFareOptions: {
    eticketOptions?: NSApiModels['EticketOption'][];
    supplementsBasedOnSelectedFare?: NSApiModels['TripFareSupplement'][];
    eticketBuyable?: boolean;
    internationalBookable?: boolean;
    international?: boolean;
    possibleWithOvChipkaart?: boolean;
  };
  Station: {
    sporen?: NSApiModels['Spoor'][];
    synoniemen?: string[];
    heeftFaciliteiten?: boolean;
    heeftVertrektijden?: boolean;
    heeftReisassistentie?: boolean;
    code?: string;
    namen?: NSApiModels['Namen'];
    stationType?:
      | 'STOPTREIN_STATION'
      | 'KNOOPPUNT_STOPTREIN_STATION'
      | 'SNELTREIN_STATION'
      | 'KNOOPPUNT_SNELTREIN_STATION'
      | 'INTERCITY_STATION'
      | 'KNOOPPUNT_INTERCITY_STATION'
      | 'MEGA_STATION'
      | 'FACULTATIEF_STATION';
    land?: string;
    lat?: number;
    lng?: number;
    radius?: number;
    naderenRadius?: number;
    ingangsDatum?: string;
    eindDatum?: string;
    uiccode?: string;
    evacode?: string;
    openToday?: boolean;
  };
  TripFare: {
    priceInCents?: number;
    product?:
      | 'OVCHIPKAART_ENKELE_REIS'
      | 'OVCHIPKAART_RETOUR'
      | 'TRAJECT_VRIJ_MAAND'
      | 'TRAJECT_VRIJ_JAAR'
      | 'BUSINESS_CARD_TRAJECT_VRIJ_JAAR'
      | 'DAL_VOORDEEL'
      | 'ALTIJD_VOORDEEL'
      | 'DAL_VRIJ'
      | 'WEEKEND_VRIJ'
      | 'ALTIJD_VRIJ'
      | 'BUSINESSCARD'
      | 'BUSINESSCARD_DAL'
      | 'STUDENT_WEEK'
      | 'STUDENT_WEEKEND'
      | 'VDU'
      | 'SAMENREISKORTING'
      | 'TRAJECT_VRIJ'
      | 'RAILRUNNER'
      | 'ETICKET_ENKELE_REIS'
      | 'ETICKET_RETOUR'
      | 'ETICKET_JOINT_JOURNEY_DISCOUNT_RETOUR'
      | 'ETICKET_JOINT_JOURNEY_DISCOUNT_ENKELE_REIS'
      | 'NSI';
    travelClass?: 'FIRST_CLASS' | 'SECOND_CLASS';
    priceInCentsExcludingSupplement?: number;
    discountType?:
      | 'NO_CHARGE'
      | 'DISCOUNT_40_PERCENT'
      | 'DISCOUNT_20_PERCENT'
      | 'FIP_DISCOUNT'
      | 'NO_DISCOUNT';
    supplementInCents?: number;
    link?: string;
    priceInCentsExcludingSupplementOrPrice?: number;
  };
  TravelAssistanceInfo: { [key: string]: any };
  Traject: {
    vervoerders?: number;
    naamVervoer?: string;
    cdTariefpuntVan?: number;
    cdTariefpuntNaar?: number;
    afstand1eKlasse?: number;
    afstand2eKlasse?: number;
    indVolledig2eKlasse?: boolean;
    prijsTraject?: NSApiModels['PrijsTraject'][];
  };
  Spoor: { spoorNummer?: string };
  TripFareSupplement: {
    supplementPriceInCents?: number;
    legIdx?: string;
    fromUICCode?: string;
    toUICCode?: string;
    link?: {
      title?: string;
      uriBuilder?: { [key: string]: any };
      rel?: string;
      rels?: string[];
      uri?: string;
      params?: { [key: string]: string };
      type?: string;
    };
  };
  Price: {
    totalPriceInCents?: number;
    priceDifferenceInCentsBetweenFirstAndSecondClass?: number;
    priceDifferenceInCentsBetweenJointJourneyDiscount?: number;
    routeDesignation?: string;
    alternativeRouteDesignations?: NSApiModels['Price'][];
    operatorName?: string;
    travelDiscount?: 'NO_DISCOUNT' | 'DISCOUNT_20' | 'DISCOUNT_40';
    travelClass?: 'FIRST_CLASS' | 'SECOND_CLASS';
    reisrecht?: NSApiModels['Reisrecht'];
    travelProducts?: (
      | 'OVCHIPKAART_ENKELE_REIS'
      | 'OVCHIPKAART_RETOUR'
      | 'TRAJECT_VRIJ_MAAND'
      | 'TRAJECT_VRIJ_JAAR'
      | 'BUSINESS_CARD_TRAJECT_VRIJ_JAAR'
      | 'DAL_VOORDEEL'
      | 'ALTIJD_VOORDEEL'
      | 'DAL_VRIJ'
      | 'WEEKEND_VRIJ'
      | 'ALTIJD_VRIJ'
      | 'BUSINESSCARD'
      | 'BUSINESSCARD_DAL'
      | 'STUDENT_WEEK'
      | 'STUDENT_WEEKEND'
      | 'VDU'
      | 'SAMENREISKORTING'
      | 'TRAJECT_VRIJ'
      | 'RAILRUNNER'
      | 'ETICKET_ENKELE_REIS'
      | 'ETICKET_RETOUR'
      | 'ETICKET_JOINT_JOURNEY_DISCOUNT_RETOUR'
      | 'ETICKET_JOINT_JOURNEY_DISCOUNT_ENKELE_REIS'
      | 'NSI'
    )[];
  };
  PrijsReisrecht: {
    idVerkoopcombinatie?: number;
    bedrag?: number;
    toeslag?: NSApiModels['Toeslag'][];
  };
  Note: {
    value?: string;
    key?: string;
    noteType?:
      | 'UNKNOWN'
      | 'ATTRIBUTE'
      | 'INFOTEXT'
      | 'REALTIME'
      | 'TICKET'
      | 'HINT';
    priority?: number;
    routeIdxFrom?: number;
    routeIdxTo?: number;
    link?: {
      title?: string;
      uriBuilder?: { [key: string]: any };
      rel?: string;
      rels?: string[];
      uri?: string;
      params?: { [key: string]: string };
      type?: string;
    };
    category?: 'PLATFORM_INFORMATION' | 'OVERCHECK_INSTRUCTION' | 'UNKNOWN';
    alternativeTransport?: boolean;
    presentationRequired?: boolean;
  };
  Baanvak: { stations?: string[] };
  Geldigheid: {
    startDatum?: string;
    eindDatum?: string;
    startTijd?: string;
    eindTijd?: string;
  };
  ServiceBookingInfo: {
    name?: string;
    tripLegIndex?: string;
    stationUic?: string;
    serviceTypeIds?: string[];
    defaultAssistanceValue?: boolean;
    canChangeAssistance?: boolean;
    message?: string;
  };
  Location: {
    name?: string;
    lng?: number;
    lat?: number;
    city?: string;
    countryCode?: string;
    uicCode?: string;
    weight?: number;
    products?: number;
  };
}
